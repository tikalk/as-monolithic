buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
        classpath 'com.bmuschko:gradle-docker-plugin:2.5'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven'
apply plugin: 'com.bmuschko.docker-remote-api'


import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage



repositories {
    mavenCentral()
}

docker{
    url = "http://$dockerHost:2376"
 //   certPath = new File(certUrl)

}
configurations {
    compile.exclude module: 'spring-boot-starter-logging'
    compile.exclude module: 'logback-classic'
    compile.exclude module: 'logback-core'
    dockerJackson
}

task zip(type: Tar, dependsOn: bootRepackage) {
    extension = 'tar.gz'
    from '.'
    baseName = 'as-monolithic'
    include 'config/**'
    include 'run-bin/*.sh'
    include 'run-bin/*.bat'
    include 'run-bin/*.sql'
    include 'build/libs/*.jar'
}
build.dependsOn(zip)



sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
	compile	'com.goebl:david-webb:1.3.0'
	compile 'com.google.code.gson:gson:2.6.2'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-test'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-log4j'
    compile 'org.hibernate:hibernate-validator'
    compile 'org.jolokia:jolokia-core'
    compile 'com.h2database:h2'
    compile 'com.jolbox:bonecp:0.8.0.RELEASE'
    compile 'mysql:mysql-connector-java'
    dockerJackson 'com.fasterxml.jackson.core:jackson-core:2.1.2'
    dockerJackson 'com.fasterxml.jackson.core:jackson-databind:2.1.2'
}
task buildImage(type: DockerBuildImage) {
    dependsOn zip
    quiet = false
    inputDir = projectDir
    tag = "$registerBaseName/$dockerBranch/$project.name:$dockerTag"
}

task pushImage(type: DockerPushImage) {
    classpath = configurations.dockerJackson + configurations.dockerJava
    dependsOn buildImage
    imageName = "$registerBaseName/$dockerBranch/$project.name"
    tag="$dockerTag"
}
